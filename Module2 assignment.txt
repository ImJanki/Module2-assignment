       MODULE-2 ASSIGNMENT

1. What is software testing?
*  Software testing is the process of verifying a system with the purpose of identifying any errors,gaps,or missing 
   requirement versus the actual requirement.

2. What is exploratory testing?
*  We can say that in this testing,test planning,analysis,design and test execution are all done together and instantly.This 
   testing is about exploring the system and encourageing real time and practial thinking of a tester.

3. What is 7 key principles? Explain in details.
*  1) Testing shows the presence of defects.
  ->  Testing can show that defects are present but can not prove that there are no defects.Testing reduces the probability of 
      undiscovered defects remaining in the software but,even if no defects are found,it is not a proof of correctness.We test
      to find the faults.
   2) Exhaustive testing is Impossible.
   -> Testing everything including all combinations and preconditions is not possible.So instead of doing the exhausting testing.
      We can use risks and priorities to focus testing effots.
   3) Early testing
   -> Testing should start as early as possible in the Software Development Life Cycle.So that any defects in the requirements or
      design phase are captured in early stages.
   4) Defect clustering
   -> A small number of modules contain most of the defectas discovered during pre-release testing,or are responsible for the most 
      operational failaures.Defects are not evenly spread in a system.They are 'clustered'. 
   5) Pesticide paradox
   -> If the same tests are repeated over and over again,eventually the same set of test cases will no longer find any new defects.
      To overcome this"pesticide paradox",the test cases need to be regularly reviewed and revised,and new and different tests need to be 
      written to exercise different parts of the software or system to potentially find more defects.
   6) Testing is context-dependent
   -> Testing is basically context dependent.Testing is done differently in different contexts.  
   7) Absence of errors fallacy
   -> If the system built is unsuable and does not fulfill the user's needs and expectations then finding and fixing defects does not help.
      If we build a system and,in doing so,find and fix defects..It does not make it good system.Even after defects have been resolved it may still be
      unstable and/or does not fulfill the user's.

4. What is traceability testing?
*  Traceability matrix is a document that traces and maps the relationship between two baseline documents.This includes one with the requirement
   specification and another one with the test cases. 

5. What is Boundary value testing?
*  It is defined as a black box technique that identifies the error and bugs between the extreme limits or boundaries of a software program or module.

6. What is Equivalence partitioning testing?
*  Equivalence partitioning is a technique of software testing in which input data is divided into partitions of valid and invalid values,and it is 
   mandatory that all partitions must exhibit the same behavior.

7. What is Integration testing? 
*  Integration testing is done to test the modules/components when integrated to verify that they work as expected. i.e to test the modules which are working  
   fine individually does not have issues when integrated.

8. What is Component testing?
*  A minimal software item that can be tested in isolation.It means "A unit is the smallest testable part of software. 

9. What is Alpha testing?
*  Alpha testing is a type of software testing performed to identify bugs before releasing the product to real users or to the public.Alpha testing is one of 
   the user acceptance tests.

10. What is Beta testing?
*   Beta testing is performed by real users of the software application in a real environment.Beta testing is one type of users acceptance testing.

11. What is Functional system testing?
*   A requirement that specifies a function that a system orsystem component must perform. 

12. What is Non-functional testing?
*   Testing of those requirement that do not relate to functionality.

13. What is GUI testing?
*   GUI stands for Graphical user interface where you interect with the computer using images rather than text.GUI testing is to ensure the functionalities
    of software application work as per specifications by checking screens and controls like menus,buttons,icons etc

14. What is Adhoc testing?
*   Adhoc testing is an informal testing type with an aim to break the system.The ERROR guessing is a techinque where the experienced and good testers are 
    encouraged to think of situations in which the software may not be able to cope.

15. What is load testing?
*   Load testing examines how the system behaves during normal and high loads and determinds if a system,Piece of software,or computing device can handle high
    loads given a high demands of end users.This tool is typically applied when a software development project near completion.

16. What is stress testing?
*   Stress testing is a type of software testing that verifies stability & reliability of software application.The goal of stress testing is measuring software
    on its robustness and error handling capabilities under extremely heavy load conditions and ensuring that software does not crash under crunch situations.

17. What is White box testing and list the types of white box gtesting?
*   Testing based on an analysis of the internal structure of the component or system.Structure based testing technique is also known as "white box" or "glass box" 
    testing technique because here the testers require knowledge of how thw software is implemented, how it works.
1-> Test/code covarage
2-> Types of covarage
3-> Statement covarage
4-> Decision covarege
5-> Condition covarage

18. What is Black box testing ? What are the different black box testing technique?
*   Black-boxtesting:Testing,either functional or nonfunctional,without reference to the internal structure of the component or system.
    Specification-basedtesting technique is also knownas‘black-box’or input/output driven testing techniques because they view the software as a black 
    box with inputs and outputs 
  * Techniques of Black Box Testing
-> Equivalence Partitioning
-> Boundary Value Testing
-> Decision Table Testing
-> State Transition Testing
-> Error guessing

19.Mention what are the categories of defects?
*-> Arithmetic Defects.
 -> Logical Defects.
-> Syntax Defects.
-> Multithreading Defects.
-> Interface Defects.
-> Performance Defects.

20.What is bigbang testing is?
* Big Bang Integration Testing is an integration testing strategy wherein all units are linked at once, resulting in a complete system. When this type of testing strategy is
  adopted,it is difficult to isolate any errors found, because attention is not paid to verifying the interfaces across individual units.

21.What is the purpose of exit criteria?
*  Exit Criteria: Exit Criteria defines the items that must be completed before testing can be concluded.17-Dec-2021

22. When should "Regression Testing" be performed?
*   Regression testing is done after functional testing has concluded, to verify that the other functionalities are working. In the corporate world, regression testing has 
   traditionally been performed by a software quality assurance team after the development team has completed work.

23.Difference between QA v/s QC v/s Tester
*  To summarize, Quality assurance is a set of processes that help “avoid” defects and assure quality. While Quality Control is a set of activities that help detect defects
   and quality issues before the products reach the hands of end customers. Testing is one of the ways of detecting those defects.

24.Difference between Smoke and Sanity?
*  Smoke Testing is performed to ascertain that the critical functionalities of the program are working fine. Sanity testing is done at random to verify that each functionality 
   is working as expected.

25.Difference between verification and Validation
* -> Verification is the process of checking that a software achieves its goal without any bugs. It is the process to ensure whether the product that is developed is right or not.
     It verifies whether the developed product fulfills the requirements that we have. Verification is static testing. 
  -> Validation is the process of checking whether the software product is up to the mark or in other words product has high level requirements. It is the process of checking the 
     validation of product i.e. it checks what we are developing is the right product. it is validation of actual and expected product. Validation is the dynamic testing. 

26.Explain types of Performance testing.
* -> Load Testing-Load testing is sort of the simplest form of performance testing. You induce a normal or expected workload to a system under test and observe it. You can use
     load tests to determine general system behavior, latency and throughput. In general load tests are used to verify your quality criteria.
  -> Stress Testing-Stress testing is basically a load test, but we are applying a higher-than-expected workload and see how the system behaves under serious stress and when 
     exceeding the design limits. You want to learn when your system breaks and how it starts to fail when being in a serious traffic situation.
  -> Scalability Testing-With scalability testing you are changing the perspective to answer the question: How effective can I grow? You can run a series of stress tests and
     gather data on how effective you really are.
     Using stress tests in a series where you steadily increase the system’s resources, you can easily tell if your system can translate this into additional capacity.
  -> spike Testing-Spike testing can be used to determine how well your system can cope with sudden traffic spikes. It is comparable to a load or stress test, but modeled as a 
     sudden burst of traffic. It can be a good preparation for a planned marketing campaign or an unplanned event like being featured on Reddit or Hacker News. Spike Testing can
     tell you if you are making good use of the elasticity of the cloud when faced with these kinds of events.
  -> Soak Testing-Soak testing, again, is basically a load test where you hold the load over longer periods of time to look for long term effects, like memory leaks, disk space 
     filling up, etc. The duration of a soak test depends on your situation. Usually a soak test runs for several hours.
  -> Configuaration testing-Configuration testing is, for obvious reasons, a very important tool in order to learn about the impact of a system’s environment to its performance. 
     It is always a series of test runs where you compare and analyze the impact of multiple configurations.

27. What is Error, Defect, Bug and failure?
* -> Error-An error is a mistake, misconception, or misunderstanding on the part of a software developer. In the category of the developer, we include software engineers, programmers,
    analysts, and testers. For example, a developer may misunderstand a de-sign notation, or a programmer might type a variable name incorrectly – leads to an Error. It is the one that 
    is generated because of the wrong login, loop or syntax. The error normally arises in software; it leads to a change in the functionality of the program.
  -> Defect-It can be simply defined as a variance between expected and actual. The defect is an error found AFTER the application goes into production. It commonly refers to several
    troubles with the software products, with their external behavior or with its internal features. In other words, a Defect is a difference between expected and actual results in the context of testing.
    It is the deviation of the customer requirement.
  -> Bug-A bug is the result of a coding error. An Error found in the development environment before the product is shipped to the customer. A programming error that causes a program to work poorly, 
    produce incorrect results or crash. An error in software or hardware that causes a program to malfunction. A bug is the terminology of Tester.
  -> Failure-A failure is the inability of a software system or component to perform its required functions within specified performance requirements. When a defect reaches the end customer it is called a Failure. 
    During development, Failures are usually observed by testers.


28.Difference between Priority and Severity
* Severity is basically a parameter that denotes the total impact of a given defect on any software. 
  Priority is basically a parameter that decides the order in which we should fix the defects. 
  Severity relates to the standards of quality. 
  Priority relates to the scheduling of defects to resolve them in software.

29.What is Bug Life Cycle?
*  The Defect Life Cycle, also known as the Bug Life Cycle, is a cycle of defects from which it goes through covering the different states in its entire life. This starts as soon as any new defect is found by a tester 
  and comes to an end when a tester closes that defect assuring that it won't get reproduced again.

30.Explain the difference between Functional testing and NonFunctional testing.
* *Functional testing - defines asystem or component
                      - What should the software system does?
                      - Mandatory
                      - At a component level
                      - verifies functionality of the software
                      - usually easy to define
 *NOn-Functional testing - Defines the quality attribute
                         - HOw should the software system the fulfill the requirement
                         - non-mandotory
                         - The overall system
                         - veriflies the performance of the software
                         - usually more difficult to define 


31.What is the difference between the STLC (Software Testing Life Cycle) and SDLC (Software Development life cycle)?
* SDLC- Software development life cycle
      - The main goal of sdlc is to deliver high quqlity products and achieve seamless user
        experience through the testing cycle
      - coders create  a well organized development plan
      - product deployment 
  STLC- Software testing life cycle
      - in stlc the most important objective is to write a functional test plan and carry
        out the testing process
      - Qa team defines the test plan 
      - testers design test cases,set uo, the environment, work out the Rtm
      - Qa team delivers test result ans error metric


32.What is the difference between test scenarios, test cases, and test script? 
* -> Test scenarios: 
     A Test Scenario is a statement describing the functionality of the application to be tested. It is used for 
     end-to-end testing of a feature and is generally derived from the use cases. Test scenarios can serve as the basis for lower-level test case creation. A single test scenario can cover one or more test cases.
  -> Test case:
     A test case is a defined format for software testing required to check if a particular application/software is working or not.
     A test case consists of a certain set of conditions that need to be checked to test an application or software.
  -> Test script:
     A test script in software testing is a set of instructions that will be performed on the system under test to test that the
     system functions as expected. There are various means for executing test scripts. Manual testing. These are more commonly called test cases.

 33.Explain what Test Plan is?
 * “Test Plan is a document describing the scope, approach, resources, and schedule of intended test activities.”
    A Test Plan is a detailed document that describes the test strategy, objectives, schedule, estimation,   deliverables, and resources required to perform testing for a software product. Test Plan helps us determine the effort needed to validate the quality of the application under test. The test plan serves as a blueprint to conduct software testing activities as a defined process, which is minutely monitored and controlled by the test manager.

 34.What is the information that should be covered?
* The information that should be covered in Test Plan are:
   ->   Analyze the product.
   ->   Design the Test Strategy.
   ->   Define the Test Objectives.
   ->   Define Test Criteria.
   ->   Resource Planning.
   ->   Plan Test Environment.
   ->   Schedule & Estimation.
   ->   Determine Test Deliverables.

35.What are the different Methodologies in Agile Development Model?
 * The different Methodologies in Agile Development Model are:
  -> Scrum.
  -> Kanban.
  -> Extreme Programming (XP).
  -> Lean Development.
  -> Crystal.




36.Explain the difference between Authorization and Authentication in Web testing. 
*  Authentication:
 -> Authentication verifies who the user is.	
 -> Authentication works through passwords, one-time pins, biometric 
          information, and other information provided or entered by the user.	
 -> Authentication is the first step of a good identity and access management process.	
 -> Authentication is visible to and partially changeable by the user.	
 -> Example: By verifying their identity, employees can gain access to an HR 
           application that includes their personal pay information, vacation time, and 401K data.

* Authorization:
 -> Authorization determines what resources a user can access.
 -> Authorization works through settings that are implemented and maintained by the organization.
 -> Authorization always takes place after authentication.
 -> Authorization isn’t visible to or changeable by the user.
 -> Example: Once their level of access is authorized, employees and HR managers can access different 
          levels of data based on the permissions set by the organization.


37.What are the common problems faced in Web testing?
* Generally five type of common problems are faced in web testing, they are:
     -> Integration.
     -> Interoperability. 
     -> Security.
     -> Performance.
     -> Usability.




















   